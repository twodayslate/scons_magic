import re
import os

env = Environment()

def munge(target, source, env):
    """
    Obfuscate the string by making it an array of characters
    and assigning each character to the array
    """
    for (i,_s) in enumerate(source):
        with open(_s.abspath, 'r') as s:
            with open(target[i].abspath, 'w+') as t:
                slines = s.readlines()
                for line in slines:
                    if "SCONS_OBFUSCATE" in line:
                        r = r'(\s*).*\*(\w*).*SCONS_OBFUSCATE\(\"(.*)\"\);\s*'
                        matches = re.search(r, line)
                        spacing = matches.group(1)
                        varname = matches.group(2)
                        word = matches.group(3)
                        t.write(spacing + 'char ' + varname + '[%d];\n' % (len(word)+1))
                        for (index, letter) in enumerate(word):
                            t.write('%s%s[%d] = \'%c\';\n' % (spacing, varname, index, letter))
                        t.write('%s%s[%d] = 0;\n' % (spacing, varname, index+1))
                    else:
                        t.write(line)

env.VariantDir('build', 'src')

def genSources(target, source, env, for_signature):
    actualTarget = []
    for s in source:
        path = str(s.abspath)
        path = os.path.join(os.path.split(path)[0], 'munged', os.path.split(path)[1])
        actualTarget.append(path)

    return actualTarget

munge = env.Command('$SCONS_SOURCES', Glob('build/*.c'), munge, SCONS_SOURCES=genSources)

p = env.Program('main', munge)
